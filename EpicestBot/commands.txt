EpicestBot Command Guide

Created By TheMostEpicest

1 - Command Creation

    1.1 - Syntax

        To create a command, use the built-in command ?addcom

        The ?addcom command has the following syntax:

            ?addcom name -property=value return_string

        The variables in this command are as follows:

            name 

                This is the name of the new command, which will be used to call it, and is REQUIRED for any new command

            property

                This allows you to set properties of a command, such as the user-level or cooldown period
                
                The accepted values are as follows:

                    ul - The minimum user-level required for a user to use this command
                    cd - The period of time between uses of this command
                    pre - Whether this command requires the name to be prefaced by the prefix (See Section 4.2 about Prefixes)
                    case - Whether this command requires matching capitalization

            value

                This is used in conjunction with 'property' to set the value of a property

                Each property has different accepted values, which are as follows:

                    ul - 'all', 'sub', 'vip', 'mod'
                    cd - Any integer
                    pre - Boolean
                    case - Boolean

            return_string 
            
                This is what will be sent in chat as a response to the command, and is REQUIRED for any new command

        As many property-value pairs as provided are accepted, however using duplicate properties will result in the first usage being overwriten by the last usage


    1.2 - References allowed in return_string

        References allow you to create non-static commands

        For instance, you can create a command that tells you the uptime of a twitch stream or generate a random number

        1.2.1 - One-Part References

            To use a one-part reference, simply type it into the return_string of your command (Note: Capitalization DOES matter)

            One-part reference list:

                %q - Inserts the entire message after command
                %c - Inserts the number of times the command has been used
                %r - Inserts a random number between 0 and 100, inclusive
                %n - Inserts the channel's name
                %u - Inserts the time that the channel has been live
                %t - Inserts the time that EpicestBot has been up
                %s - Inserts the streamer's current spotify song and link (experimental - to join experiment, contact TheMostEpicest)
                %e - Inserts a random ffz or bttv emote enabled in the channel (Note: you must put spaces on either side of %e for the emote to be inserted properly)
                %d - Inserts the user who called the command's display name


        1.2.2 - Two-Part References

            To use a two-part reference, type it into the return_string of your command, and replace the variables inside (Note: Capitalization DOES matter)

            Two-part reference list:

                $rmin`max$r - Inserts a random number between min and max, inclusive
                $sstring`min`max$s - Inserts string a random number of times between min and max, inclusive
                $cswitch`case`string`default$c - Inserts string corresponding to the case that equals the value of switch. As many case-string pairs as wanted may be added. If no case matches the value of switch, default is inserted
                $eemote$e - Inserts true or false based on whether or not emote is enabled on the channel's bttv or ffz

        
        These list will be expanded when more references are implemented. If you have an idea for a reference, contact TheMostEpicest


    1.3 - Argument Creation

        Arguments allow a command to use information that was sent along with the command

        For instance, you can generate a random number between 1 and a number provided by the user

        Arguments act just like two-part references (See Section 1.2.2), and have the following syntax:

            %$location`required`type`default%$

        The variables in an argument are as follows:

            location
            
                This is which spot in the command usage this argument will be located at

                This must be a number, and if no value or a non-numerical value is provided, the default is 0
            
            required

                This is whether or not this argument is required for the command to function

                This must be a boolean, and if no value or a non-boolean value is provided, the default is false

            type

                This is what type the argument must be for the command to function

                Accepted values are as follows:

                    any
                    number
                    boolean
                    string

                If no value or a unaccepted value is provided, the default is string

            default

                This is what will be inserted if the command usage does not have an argument in the assigned location 

                This may be any value, and if no value is provided, the default is an empty string ('')


    1.4 - Sample Command Creation

        The following is a sample interaction in TheLeastEpicest's chat:

            *MOD* TheMostEpicest: ?addcom test_com -ul=sub %d, this is a user generated command that gives you a random emote ( %e ) from the channel %n, and tells you what you wrote after 'test_com' (%$0`false`any`you wrote nothing%$)
            EpicestBot: Created command test_com
            *MOD* TheMostEpicest: !test_com something
            EpicestBot: TheMostEpicest, this is a user generated command that gives you a random emote ( POGSLIDE ) from the channel TheLeastEpicest, and tells you what you wrote after 'test_com' (something)
            *MOD* TheMostEpicest !test_com
            EpicestBot: TheMostEpicest, this is a user generated command that gives you a random emote ( catJAM ) from the channel TheLeastEpicest, and tells you what you wrote after 'test_com' (you wrote nothing)
            xx_gamer420: !test_com
            *SUB* 12GramsOfPotassium: !test_com imagine not being able to use this command
            EpicestBot: 12GramsOfPotassium, this is a user generated command that gives you a random emote ( BBoomer ) from the channel TheLeastEpicest, and tells you what you wrote after 'test_com' (imagine)


2 - Editing Commands

    Editing a command uses the same syntax as creating a command (See Section 1.1), using the built-in command ?editcom

    Unlike creating a command, the only required argument is the command name. However, a minimum of one (1) other argument is required

    To edit a command's return_string, type the new string after the command's name

    To edit one of a command's properties, type the new property-value pair after the command's name


3 - Deleting Commands

    To delete a command, use the built-in command ?delcom

    The ?delcom command has the following syntax:

        ?delcom name

    The variable in this command is as follows:

        name 

            This is the name of the command you want to delete, and is REQUIRED to delete a command


4 - Miscellaneous Commands

    4.1 - Toggle

        To toggle responses on and off, use the built-in command ?toggle

        The ?toggle command has the following syntax:

            ?toggle toggle

        The variable in this command is as follows:

            toggle

                This is whether to toggle reponses on or off, and is REQURED to toggle responses

                Accepted values are as follows:

                    on - Turns responses to commands on
                    off - Turns responses to commands off


    4.2 - Prefixes

        The channel's command prefix is required in front of all commands with usePrefix set to true (See Section 1.1)

        To change or view the channel's command prefix, use the built-in command !prefix

        The ?prefix command has the following syntax:

            ?prefix prefix

        The variable in this command is as follows:

            prefix

                This is the new prefix

                If no value is provided for prefix, the current prefix will be printed instead


    4.3 - Reload

        To reload ffz and bttv channel emotes, use the built-in command ?reload

        The ?reload command has the following syntax:

            ?reload
